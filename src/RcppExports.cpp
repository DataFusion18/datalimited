// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// schaefer_cmsy
List schaefer_cmsy(NumericVector r_lim, NumericVector k_lim, double sig_r, NumericVector startbio, NumericVector yr, NumericVector ct, int interyr_index, double prior_log_mean, double prior_log_sd, NumericVector interbio, int reps);
RcppExport SEXP datalimited_schaefer_cmsy(SEXP r_limSEXP, SEXP k_limSEXP, SEXP sig_rSEXP, SEXP startbioSEXP, SEXP yrSEXP, SEXP ctSEXP, SEXP interyr_indexSEXP, SEXP prior_log_meanSEXP, SEXP prior_log_sdSEXP, SEXP interbioSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type r_lim(r_limSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type k_lim(k_limSEXP);
    Rcpp::traits::input_parameter< double >::type sig_r(sig_rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type startbio(startbioSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yr(yrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ct(ctSEXP);
    Rcpp::traits::input_parameter< int >::type interyr_index(interyr_indexSEXP);
    Rcpp::traits::input_parameter< double >::type prior_log_mean(prior_log_meanSEXP);
    Rcpp::traits::input_parameter< double >::type prior_log_sd(prior_log_sdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type interbio(interbioSEXP);
    Rcpp::traits::input_parameter< int >::type reps(repsSEXP);
    __result = Rcpp::wrap(schaefer_cmsy(r_lim, k_lim, sig_r, startbio, yr, ct, interyr_index, prior_log_mean, prior_log_sd, interbio, reps));
    return __result;
END_RCPP
}
// check_comsir_lik
NumericVector check_comsir_lik(int nsim, NumericVector predbio, NumericVector predprop, NumericVector like);
RcppExport SEXP datalimited_check_comsir_lik(SEXP nsimSEXP, SEXP predbioSEXP, SEXP predpropSEXP, SEXP likeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type nsim(nsimSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type predbio(predbioSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type predprop(predpropSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type like(likeSEXP);
    __result = Rcpp::wrap(check_comsir_lik(nsim, predbio, predprop, like));
    return __result;
END_RCPP
}
// posfun
NumericMatrix posfun(NumericVector x, double eps);
RcppExport SEXP datalimited_posfun(SEXP xSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    __result = Rcpp::wrap(posfun(x, eps));
    return __result;
END_RCPP
}
// effortdyn
NumericMatrix effortdyn(NumericVector h, NumericVector k, NumericVector r, NumericVector x, NumericVector a, NumericVector yr, NumericVector ct, bool logistic_model);
RcppExport SEXP datalimited_effortdyn(SEXP hSEXP, SEXP kSEXP, SEXP rSEXP, SEXP xSEXP, SEXP aSEXP, SEXP yrSEXP, SEXP ctSEXP, SEXP logistic_modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r(rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yr(yrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ct(ctSEXP);
    Rcpp::traits::input_parameter< bool >::type logistic_model(logistic_modelSEXP);
    __result = Rcpp::wrap(effortdyn(h, k, r, x, a, yr, ct, logistic_model));
    return __result;
END_RCPP
}
